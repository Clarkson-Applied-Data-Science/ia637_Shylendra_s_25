CREATE TABLE Users (
    user_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('buyer', 'seller', 'admin') NOT NULL,
    location VARCHAR(255) NULL,
    created_at DATETIME NOT NULL,
    updated_at DATETIME NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE Categories (
    category_id INT NOT NULL,
    parent_id INT NULL,
    category_name VARCHAR(255) NOT NULL,
    PRIMARY KEY (category_id),
    FOREIGN KEY (parent_id) REFERENCES Categories(category_id)
);

CREATE TABLE Products (
    product_id INT NOT NULL,
    product_parent_id INT NULL,
    name VARCHAR(255) NOT NULL,
    category_id INT NOT NULL,
    description TEXT NULL,
    created_at TIMESTAMP NULL,
    PRIMARY KEY (product_id),
    FOREIGN KEY (product_parent_id) REFERENCES Products(product_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);

CREATE TABLE Stores (
    store_id INT  NOT NULL,
    user_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255) NOT NULL,
    contact_info VARCHAR(255) NULL,
    created_at TIMESTAMP NULL,
    updated_at DATETIME NULL,
    PRIMARY KEY (store_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Prices (
    price_id INT NOT NULL,
    product_id INT  NOT NULL,
    store_id INT  NOT NULL,
    original_price DECIMAL(10,2) NULL,
    todays_price DECIMAL(10,2) NULL,
    discount DECIMAL(5,2) NULL,
    last_updated TIMESTAMP NULL,
    PRIMARY KEY (price_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id),
    FOREIGN KEY (store_id) REFERENCES Stores(store_id)
);

CREATE TABLE Price_History (
    history_id INT NOT NULL,
    price_id INT NOT NULL,
    old_price DECIMAL(10,2) NOT NULL,
    new_price DECIMAL(10,2) NOT NULL,
    changed_on TIMESTAMP NULL,
    PRIMARY KEY (history_id),
    FOREIGN KEY (price_id) REFERENCES Prices(price_id)
);
